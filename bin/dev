#!/bin/bash

# Parse command line arguments
RELEASE_MODE=false
for arg in "$@"; do
    case $arg in
        --release)
            RELEASE_MODE=true
            shift
            ;;
        --help|-h)
            echo "Usage: $0 [--release]"
            echo "  --release    Build and run in release mode (optimized)"
            exit 0
            ;;
        *)
            echo "Unknown argument: $arg"
            echo "Use --help for usage information"
            exit 1
            ;;
    esac
done

# Kill background processes on script exit
trap 'kill $(jobs -p) 2>/dev/null' EXIT

# ANSI color codes
CLIENT_COLOR='\033[38;5;117m' # Light blue
SERVER_COLOR='\033[38;5;179m' # Light yellow
LOGO_COLOR='\033[38;5;189m' # Light magenta
NC='\033[0m' # Stop color

# Check if Rust is installed
if ! command -v rustc &> /dev/null
then
    echo "❌ Rust is not installed. Please install Rust to run this script."
    exit 1
fi

# Check if Trunk is installed
if ! command -v trunk &> /dev/null
then
    echo "❌ Trunk is not installed. Please install Trunk to run this script."
    exit 1
fi

# Check if Cargo Watch is installed (only needed for dev mode)
if [ "$RELEASE_MODE" = false ] && ! command -v cargo-watch &> /dev/null
then
    echo "❌ Cargo Watch is not installed. Please install Cargo Watch to run this script."
    exit 1
fi

# Check if npm/npx is installed
if ! command -v npm &> /dev/null && ! command -v npx &> /dev/null
then
    echo "❌ npm or npx is not installed. Please install Node.js to run this script."
    exit 1
fi

# Print logo
echo -e "${LOGO_COLOR}"
echo "  ,--. ,--.,--.,--.          "
echo "  |  .'   /\`--'|  |,-. ,---. "
echo "  |  .   ' ,--.|     /| .-. |"
echo "  |  |\   \|  ||  \  \' '-' '"
echo "  \`--' '--'\`--'\`--'\`--'\`---' "
echo -e "${NC}"

echo "   📡 Backend:  http://localhost:3030"
echo "   🎨 Frontend: http://localhost:8080"
echo -e "\nPress Ctrl+C to stop both servers\n"

if [ "$RELEASE_MODE" = true ]; then
    echo "🚀 Starting Kiko servers in RELEASE mode..."
    
    # Start backend in release mode
    echo "📡 Starting backend server (release)..."
    cd crates/kiko-backend
    cargo run --release 2>&1 | awk -v prefix="${SERVER_COLOR}[server]${NC}" '{print prefix " " $0; fflush()}' &
    BACKEND_PID=$!

    sleep 3 # Give backend time to start
    
    # Start frontend in release mode
    echo "🎨 Starting frontend server (release)..."
    cd ../kiko-frontend
    trunk serve --release 2>&1 | awk -v prefix="${CLIENT_COLOR}[client]${NC}" '{print prefix " " $0; fflush()}' &
    FRONTEND_PID=$!
    
    echo "✅ Servers running in RELEASE mode:"
else
    echo "🚀 Starting Kiko development servers..."
    
    # Start backend with watch mode
    echo "📡 Starting backend server (dev watch)..."
    cd crates/kiko-backend
    cargo watch -w src -x run 2>&1 | awk -v prefix="${SERVER_COLOR}[server]${NC}" '{print prefix " " $0; fflush()}' &
    BACKEND_PID=$!

    sleep 3 # Give backend time to start
        
    # Start frontend in dev mode
    echo "🎨 Starting frontend server (dev)..."
    cd ../kiko-frontend
    trunk serve 2>&1 | awk -v prefix="${CLIENT_COLOR}[client]${NC}" '{print prefix " " $0; fflush()}' &
    FRONTEND_PID=$!
    
    echo "✅ Servers running in DEVELOPMENT mode:"
fi

# Wait for user interrupt
wait