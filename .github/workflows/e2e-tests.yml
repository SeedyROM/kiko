name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
        components: rustfmt, clippy
    
    - name: Cache Cargo registry and git trees
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-
    
    - name: Cache Cargo binaries
      uses: actions/cache@v4
      with:
        path: ~/.cargo/bin/
        key: ${{ runner.os }}-cargo-bin-trunk-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-bin-trunk-
          ${{ runner.os }}-cargo-bin-
    
    - name: Cache target directory
      uses: actions/cache@v4
      with:
        path: target/
        key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/*.rs') }}
        restore-keys: |
          ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}-
          ${{ runner.os }}-target-
    
    - name: Install Rust dependencies
      run: |
        cargo install trunk --locked || echo "trunk already installed"
        cargo install cargo-watch --locked || echo "cargo-watch already installed"
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'tests/e2e/package-lock.json'
    
    - name: Cache global npm packages
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-global-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-global-
    
    - name: Cache frontend node_modules
      uses: actions/cache@v4
      with:
        path: crates/kiko-frontend/node_modules
        key: ${{ runner.os }}-frontend-node-modules-tailwindcss
        restore-keys: |
          ${{ runner.os }}-frontend-node-modules-
    
    - name: Install Node.js dependencies
      run: |
        # Install tailwindcss globally and create local node_modules in frontend
        npm install -g tailwindcss
        cd crates/kiko-frontend
        mkdir -p node_modules
        npm install tailwindcss --no-save
        cd ../../tests/e2e && npm install
    
    - name: Cache Playwright Browsers
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('tests/e2e/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-playwright-
    
    - name: Install Playwright Browsers
      run: cd tests/e2e && npx playwright install --with-deps
    
    - name: Build Rust project
      run: |
        cargo build --release
        cd crates/kiko-frontend && RUSTFLAGS="-C target-feature=-nontrapping-fptoint" trunk build --release
    
    - name: Run E2E tests
      run: cd tests/e2e && npm run test:e2e
      env:
        CI: true
    
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report
        path: tests/e2e/playwright-report/
        retention-days: 30
    
    - name: Upload test screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-screenshots
        path: tests/e2e/test-screenshots/
        retention-days: 30